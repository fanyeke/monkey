test case 1:
Const a=10;
var b,c;
begin
read(b);
c:=a+b;
write(c)
end.

Type		Literal
IDENT		Const
IDENT		a
=		=
INT		10
;		;
VAR		var
IDENT		b
,		,
IDENT		c
;		;
BEGIN		begin
READ		read
(		(
IDENT		b
)		)
;		;
IDENT		c
:=		:=
IDENT		a
+		+
IDENT		b
;		;
WRITE		write
(		(
IDENT		c
)		)
END		end
.		.
-------------

test case 2:
begin call const do end if odd procedure read then var while write

Type		Literal
BEGIN		begin
CALL		call
CONST		const
DO		do
END		end
IF		if
ODD		odd
PROCEDURE		procedure
READ		read
THEN		then
VAR		var
WHILE		while
WRITE		write
-------------

test case 3:
a b c d e f g

Type		Literal
IDENT		a
IDENT		b
IDENT		c
IDENT		d
IDENT		e
IDENT		f
IDENT		g
-------------

test case 4:
+ - * / = # < <= > >= :=

Type		Literal
+		+
-		-
*		*
/		/
=		=
#		#
<		<
<=		<=
>		>
>=		>=
:=		:=
-------------

test case 5:
(),.

Type		Literal
(		(
)		)
,		,
.		.
-------------

test case 6:
12 33 4 5 5555

Type		Literal
INT		12
INT		33
INT		4
INT		5
INT		5555
-------------

test case 7:


Type		Literal
-------------

